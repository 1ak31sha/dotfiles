!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/16eccf0/
$FZF_DEFAULT_COMMAND	init.vim	/^let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore .git -l -g ""'$/;"	v
1	init.vim	/^nmap 1 \$$/;"	m
<C-/>	init.vim	/^nmap <C-\/> :call Smart_commenting()<CR>$/;"	m
<C-\\>	init.vim	/^vmap <C-\\>            di\/*<CR>*\/<CR><esc>kkp$/;"	m
<C-b>	init.vim	/^nnoremap <C-b> :NERDTreeToggle<CR>$/;"	m
<C-c>	init.vim	/^vnoremap <C-c>        "*y$/;"	m
<C-p>	init.vim	/^nmap <C-p> :FZF<CR>$/;"	m
<C-q>	init.vim	/^nnoremap <C-q> :NERDTreeFocus<CR>$/;"	m
<C-r>	init.vim	/^vnoremap <C-r>        "hy:%s\/<C-r>h\/\/gc<left><left><left>$/;"	m
<C-s>	init.vim	/^vmap <C-s>            :call Split_Long_Lines_Max_80()<CR>$/;"	m
<C-w>	init.vim	/^imap <C-w>     <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-w>	init.vim	/^smap <C-w>     <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-w>	init.vim	/^xmap <C-w>     <Plug>(neosnippet_expand_target)$/;"	m
<C-x>	init.vim	/^vnoremap <C-x>        "*d$/;"	m
<Leader>9	init.vim	/^nmap <silent>     <Leader>9 :call Cycle_colors()<CR>$/;"	m
<Leader><	init.vim	/^vmap <Leader>< <Esc>:call VisualHTMLTagWrap()<CR>$/;"	m
<Leader>>	init.vim	/^vmap <Leader>> <Esc>:call VisualHTMLTagWrap()<CR>$/;"	m
<Leader>c	init.vim	/^nmap <Leader>c :call Cycle_numbering()<CR>$/;"	m
<Leader>d	init.vim	/^nmap <Leader>d <S-v>yp$/;"	m
<Leader>d	init.vim	/^xnoremap <Leader>d    y`>p$/;"	m
<Leader>h	init.vim	/^nmap <Leader>h :sp<CR><C-w><Down>$/;"	m
<Leader>html	init.vim	/^nmap <Leader>html :-1read $DOTFILES\/testhtml.html<CR>1jf>a$/;"	m
<Leader>l1	init.vim	/^nmap <Leader>l1       :source $DOTFILES\/learning.vim<CR>$/;"	m
<Leader>m1	init.vim	/^nmap <Leader>m1       :mksession! $DOTFILES\/learning.vim<CR>$/;"	m
<Leader>py	init.vim	/^nmap <Leader>py <Plug>(Prettier)$/;"	m
<Leader>q	init.vim	/^nmap <Leader>q :q<CR>$/;"	m
<Leader>r	init.vim	/^nmap <Leader>r :source $DOTFILES\/init.vim<CR>$/;"	m
<Leader>s	init.vim	/^nmap <Leader>s :w<CR>$/;"	m
<Leader>t	init.vim	/^nmap <Leader>t :tabnew<CR>$/;"	m
<Leader>v	init.vim	/^nmap <Leader>v :vsp<CR><C-w><Right>$/;"	m
<Leader>z	init.vim	/^nmap <Leader>z :call Zap()<CR>$/;"	m
<S-h>	init.vim	/^nmap <S-h> zH$/;"	m
<S-l>	init.vim	/^nmap <S-l> zL$/;"	m
<TAB>	init.vim	/^smap <expr><TAB> neosnippet#expandable_or_jumpable() ?$/;"	m
<c-d>	init.vim	/^nmap <c-d> :call smooth_scroll#down(&scroll, 0, 2)<CR>$/;"	m
<c-u>	init.vim	/^nmap <c-u> :call smooth_scroll#up(&scroll, 0, 2)<CR>$/;"	m
<leader>"	init.vim	/^nmap <leader>"        viwS"<CR>$/;"	m
<leader>'	init.vim	/^nmap <leader>'        viwS'<CR>$/;"	m
<leader>(	init.vim	/^nmap <leader>(        viwS(<CR>$/;"	m
<leader>1	init.vim	/^nmap <leader>1 :tabn 1<CR>$/;"	m
<leader>2	init.vim	/^nmap <leader>2 2gt$/;"	m
<leader>3	init.vim	/^nmap <leader>3 3gt$/;"	m
<leader>4	init.vim	/^nmap <leader>4 4gt$/;"	m
<leader>5	init.vim	/^nmap <leader>5 5gt$/;"	m
<leader>6	init.vim	/^nmap <leader>6 6gt$/;"	m
<leader>7	init.vim	/^nmap <leader>7 7gt$/;"	m
<leader>8	init.vim	/^nmap <leader>8 :call Smart_commenting()<CR>$/;"	m
<leader>[	init.vim	/^nmap <leader>[        viwS[<CR>$/;"	m
<leader>a	init.vim	/^nmap <leader>a :Ag<space>$/;"	m
<leader>ch	init.vim	/^nmap <leader>ch   :checkhealth<CR>$/;"	m
<leader>f	init.vim	/^nmap <leader>f :NERDTreeFind<CR>$/;"	m
<leader>m	init.vim	/^nmap <leader>m :call DisplayTag()<CR>$/;"	m
<leader>n	init.vim	/^nnoremap <leader>n :call RebuildTags()<CR>$/;"	m
<leader>o	init.vim	/^nmap <leader>o :call DisplayGivenTag()<CR>$/;"	m
<leader>p	init.vim	/^nmap <leader>p :Prettier$/;"	m
<leader>p	init.vim	/^nmap <leader>p :Prettier<CR>$/;"	m
<leader>p	init.vim	/^nmap <leader>p :PrettierCli <q-args> "--trailing-comma all"$/;"	m
<leader>p	init.vim	/^nmap <leader>p :PrettierCli <q-args> --trailing-comma all$/;"	m
<leader>pi	init.vim	/^nmap <leader>pi   :PlugInstall<CR>$/;"	m
<leader>x	init.vim	/^nmap <leader>x  :w suda:\/\/%<CR>$/;"	m
<leader>y	init.vim	/^nmap <leader>y :YAMLFormat<CR>$/;"	m
<leader>{	init.vim	/^nmap <leader>{        viwS{<CR>$/;"	m
Block_comment	init.vim	/^function! Block_comment() abort$/;"	f
Cycle_colors	init.vim	/^function! Cycle_colors() abort$/;"	f
Cycle_numbering	init.vim	/^function! Cycle_numbering() abort$/;"	f
J	init.vim	/^xnoremap J            :move '>+1<CR>gv=gv$/;"	m
K	init.vim	/^xnoremap K            :move '<-2<CR>gv=gv$/;"	m
Multiple_cursors_after	init.vim	/^function! Multiple_cursors_after()$/;"	f
Multiple_cursors_before	init.vim	/^function! Multiple_cursors_before()$/;"	f
NERDTreeMapOpenInTab	init.vim	/^let NERDTreeMapOpenInTab='t'$/;"	v
NERDTreeShowHidden	init.vim	/^let NERDTreeShowHidden=1$/;"	v
SetGMark	init.vim	/^function! SetGMark(mark, filename, line_nr)$/;"	f
Smart_commenting	init.vim	/^function! Smart_commenting() abort$/;"	f
Split_Long_Lines_Max_80	init.vim	/^function! Split_Long_Lines_Max_80() abort$/;"	f
VisualHTMLTagWrap	init.vim	/^function! VisualHTMLTagWrap()$/;"	f
WatchForChanges	init.vim	/^command! -bang WatchForChanges                  :call WatchForChanges(@%,  {'toggle': 1, 'autore/;"	c
WatchForChanges	init.vim	/^function! WatchForChanges(bufname, ...)$/;"	f
WatchForChangesAllFile	init.vim	/^command! -bang WatchForChangesAllFile           :call WatchForChanges('*', {'toggle': 1, 'autore/;"	c
WatchForChangesWhileInThisBuffer	init.vim	/^command! -bang WatchForChangesWhileInThisBuffer :call WatchForChanges(@%,  {'toggle': 1, 'autore/;"	c
Zap	init.vim	/^function! Zap() abort$/;"	f
autoreadargs	init.vim	/^let autoreadargs={'autoread':1}$/;"	v
b:ale_fixers	init.vim	/^let b:ale_fixers = ['prettier', 'eslint']$/;"	v
g:DevIconsEnableFoldersOpenClose	init.vim	/^let g:DevIconsEnableFoldersOpenClose = 1$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor = {} " this line is needed to avoid error$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor['.agignore'] = s:rspec_red$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor['.bash_profile'] = s:monokai_green$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor['.bashrc'] = s:monokai_green$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor['.gitconfig'] = s:git_orange$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor['.gitignore'] = s:git_orange$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor['.tmux.conf'] = s:pink$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor['Dockerfile'] = s:monokai_blue$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor['config.fish'] = s:monokai_blue$/;"	v
g:NERDTreeExactMatchHighlightColor	init.vim	/^let g:NERDTreeExactMatchHighlightColor['tags'] = s:rspec_red$/;"	v
g:NERDTreeExactMatchHighlightFullName	init.vim	/^let g:NERDTreeExactMatchHighlightFullName = 1$/;"	v
g:NERDTreeFileExtensionHighlightFullName	init.vim	/^let g:NERDTreeFileExtensionHighlightFullName = 1$/;"	v
g:NERDTreeLimitedSyntax	init.vim	/^let g:NERDTreeLimitedSyntax = 1$/;"	v
g:NERDTreePatternMatchHighlightFullName	init.vim	/^let g:NERDTreePatternMatchHighlightFullName = 1$/;"	v
g:UltiSnipsEditSplit	init.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsExpandTrigger	init.vim	/^let g:UltiSnipsExpandTrigger='<tab>'$/;"	v
g:UltiSnipsJumpBackwardTrigger	init.vim	/^let g:UltiSnipsJumpBackwardTrigger="<leader>k"$/;"	v
g:UltiSnipsJumpForwardTrigger	init.vim	/^let g:UltiSnipsJumpForwardTrigger="<leader-j>"$/;"	v
g:UltiSnipsUsePythonVersion	init.vim	/^let g:UltiSnipsUsePythonVersion = 3$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodes	init.vim	/^let g:WebDevIconsUnicodeDecorateFolderNodes = 1$/;"	v
g:ag_working_path_mode	init.vim	/^let g:ag_working_path_mode="r"$/;"	v
g:ale_javascript_eslint_options	init.vim	/^let g:ale_javascript_eslint_options='-c ~\/workspace\/emcm-ui\/packages\/eslint-config\/eslintrc/;"	v
g:ale_linters	init.vim	/^let g:ale_linters = {$/;"	v
g:closetag_close_shortcut	init.vim	/^let g:closetag_close_shortcut = '<leader>>'$/;"	v
g:closetag_close_shortcut	init.vim	/^let g:closetag_close_shortcut = '>'$/;"	v
g:closetag_emptyTags_caseSensitive	init.vim	/^let g:closetag_emptyTags_caseSensitive = 1$/;"	v
g:closetag_filenames	init.vim	/^let g:closetag_filenames = '*.html,*.xhtml,*.phtml'$/;"	v
g:closetag_filenames	init.vim	/^let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.jsx'$/;"	v
g:closetag_filenames	init.vim	/^let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.jsx, *.js'$/;"	v
g:closetag_filetypes	init.vim	/^let g:closetag_filetypes = 'html,xhtml,phtml'$/;"	v
g:closetag_filetypes	init.vim	/^let g:closetag_filetypes = 'html,xhtml,phtml,js'$/;"	v
g:closetag_shortcut	init.vim	/^let g:closetag_shortcut = ''$/;"	v
g:closetag_shortcut	init.vim	/^let g:closetag_shortcut = '<leader>>'$/;"	v
g:closetag_shortcut	init.vim	/^let g:closetag_shortcut = '>'$/;"	v
g:closetag_xhtml_filenames	init.vim	/^let g:closetag_xhtml_filenames = '*.xhtml,*.jsx'$/;"	v
g:closetag_xhtml_filetypes	init.vim	/^let g:closetag_xhtml_filetypes = 'xhtml,jsx'$/;"	v
g:ctrlp_show_hidden	init.vim	/^let g:ctrlp_show_hidden = 1$/;"	v
g:deoplete#enable_at_startup	init.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:fzf_colors	init.vim	/^let g:fzf_colors =$/;"	v
g:fzf_layout	init.vim	/^let g:fzf_layout = { 'up': '~40%' }$/;"	v
g:gitgutter_sign_added	init.vim	/^let g:gitgutter_sign_added = emoji#for('small_blue_diamond')$/;"	v
g:gitgutter_sign_modified	init.vim	/^let g:gitgutter_sign_modified = emoji#for('small_orange_diamond')$/;"	v
g:gitgutter_sign_modified_removed	init.vim	/^let g:gitgutter_sign_modified_removed = emoji#for('collision')$/;"	v
g:gitgutter_sign_removed	init.vim	/^let g:gitgutter_sign_removed = emoji#for('small_red_triangle')$/;"	v
g:javascript_plugin_jsdoc	init.vim	/^let g:javascript_plugin_jsdoc = 1$/;"	v
g:lightline	init.vim	/^let g:lightline = {$/;"	v
g:neosnippet#disable_runtime_snippets	init.vim	/^let g:neosnippet#disable_runtime_snippets = {$/;"	v
g:neosnippet#snippets_directory	init.vim	/^let g:neosnippet#snippets_directory='$DOTFILES\/neosnips\/'$/;"	v
g:prettier#config#bracket_spacing	init.vim	/^let g:prettier#config#bracket_spacing = 'true'$/;"	v
g:prettier#config#indent_width	init.vim	/^let g:prettier#config#indent_width = '2'$/;"	v
g:prettier#config#semi	init.vim	/^let g:prettier#config#semi = 'false'$/;"	v
g:prettier#config#tab_width	init.vim	/^let g:prettier#config#tab_width = 2$/;"	v
g:prettier#config#trailing_comma	init.vim	/^let g:prettier#config#trailing_comma = 'all'$/;"	v
g:prettier#exec_cmd_path	init.vim	/^let g:prettier#exec_cmd_path = "\/usr\/local\/bin\/prettier"$/;"	v
g:prettier#exec_cmd_path	init.vim	/^let g:prettier#exec_cmd_path = "prettier"$/;"	v
g:webdevicons_gui_glyph_fix	init.vim	/^let g:webdevicons_gui_glyph_fix = 1$/;"	v
mapleader	init.vim	/^let mapleader = " "$/;"	v
s:aqua	init.vim	/^let s:aqua =  "3AFFDB"$/;"	v
s:beige	init.vim	/^let s:beige = "F5C06F"$/;"	v
s:blue	init.vim	/^let s:blue = "689FB6"$/;"	v
s:brown	init.vim	/^let s:brown = "905532"$/;"	v
s:darkBlue	init.vim	/^let s:darkBlue = "44788E"$/;"	v
s:darkOrange	init.vim	/^let s:darkOrange = "F16529"$/;"	v
s:get_visual_selection	init.vim	/^function! s:get_visual_selection()$/;"	f
s:git_orange	init.vim	/^let s:git_orange = 'F54D27'$/;"	v
s:green	init.vim	/^let s:green = "8FAA54"$/;"	v
s:lightGreen	init.vim	/^let s:lightGreen = "31B53E"$/;"	v
s:lightPurple	init.vim	/^let s:lightPurple = "834F79"$/;"	v
s:monokai_blue	init.vim	/^let s:monokai_blue = "66D9EF"$/;"	v
s:monokai_green	init.vim	/^let s:monokai_green = "A6E22E"$/;"	v
s:orange	init.vim	/^let s:orange = "D4843E"$/;"	v
s:pink	init.vim	/^let s:pink = "F92672"$/;"	v
s:purple	init.vim	/^let s:purple = "834F79"$/;"	v
s:red	init.vim	/^let s:red = "AE403F"$/;"	v
s:rspec_red	init.vim	/^let s:rspec_red = 'FE405F'$/;"	v
s:salmon	init.vim	/^let s:salmon = "EE6E73"$/;"	v
s:white	init.vim	/^let s:white = "FFFFFF"$/;"	v
s:yellow	init.vim	/^let s:yellow = "F09F17"$/;"	v
