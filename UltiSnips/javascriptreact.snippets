snippet *emo "emotion setup" b
/** @jsxImportSource @emotion/react */
import { useTheme, css } from "@emotion/react"

endsnippet

snippet csss "setup emotion's css attribute" A
css={css`
	display: flex;
	$1
`} $2
endsnippet

snippet fc "functional component" b
import React from "react";

const $1 = ({
  $2,
}) => {
	useEffect(()=> {
		console.log('use effect')
	})
  return (
    <div className="">
      <div>{$2}</div>
    </div>
  )
}

export { $1 }
endsnippet
snippet fn "arrow function" b
$1 = ($2) => {
  $3
};
endsnippet

snippet mstp "mapStateToProps" b
function mapStateToProps(state) {
  const { ${1:loading} } = state
  return { $1 };
};
endsnippet

snippet cl "console.log" b
console.log($1)
endsnippet
snippet div "wrap visual in div" b
<div>
  ${VISUAL}
</div>

endsnippet

snippet <div "div snip" b
<div$1>$2</div>
endsnippet

snippet con "consolelog" b
console.log(${VISUAL})
endsnippet

snippet mdtp "mapDispatchToProps" A
function mapDispatchToProps(dispatch) {
return {
    setCardData: data => {
      dispatch(actionCreators.ActionCreators.setCardData(data))
    },
  }
}

};
endsnippet

snippet type "export const x='x'" b
export const $1 = '$1'
endsnippet

snippet i "import x from 'x'" b
import $1 from '$2'
endsnippet

snippet rc "react class component" b 
import React, { Component } from 'react'
import PropTypes from 'prop-types';

class $1 extends Component{

	render(){
		return(
			<div>

			</div>
		)
	}
}

export default $1
endsnippet



